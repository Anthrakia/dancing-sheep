#summary The Client/Server Protocol

= Introduction =

The client and the server communicate with HTTP.  The server replies with XML structured data, images, and animations.  After the redirection, if the user has entered credentials, then they included in the HTTP requests using the Basic Authentication.

= On Install =

When the client is installed it generates a 8-byte random unique ID, written with hex digits, eg FDB1C06A94A0FC87.  This UID is passed to all subsequent queries.

= On Startup =

When the client starts up it makes a redirection query.  the resulting hostname is used for all subsequent non-redirection.  queries.  The redirection is cached.
{{{
http://community.sheepserver.net/query.php?q=redir&u=$ACCOUNT&p=$HASH&v=$VERSION&i=$UID
}}}
Where $ACCOUNT is the drupal login, $HASH is the md5 hash with salt, VERSION is the client version number, and UID was generated on install.
For example:
{{{
http://community.sheepserver.net/query.php?q=redir&u=spot&p=E42D7CD78F00B204E9800998ECF8427E&v=LNX_2.7b12&i=8D94A5E812F4D8E9
}}}
reply:
{{{
<query><redir host="http://v2d7c.sheepserver.net/"/></query>
}}}

= List Sheep =
To get a directory of current live sheep the client fetches:
{{{
$HOST/list?u=$UID&v=$VERSION
}}}
reply is gzipped XML:
{{{
<list gen="244" size="800 592" retry="600">
<sheep id="27045" type="0" state="done" time="1283912914" size="1688352" rating="102" first="27045" last="27045" url="http://v2d7c.sheepserver.net.nyud.net/gen/244/27045/sheep.avi"/>
<sheep id="33860" type="0" state="done" time="1291465044" size="2513326" rating="91" first="33259" last="27045" url="http://v2d7c.sheepserver.net.nyud.net/gen/244/33860/sheep.avi"/>
...
</list>
}}}
The first line has the generation and resolution for this flock.

Each {{{sheep}}} element stands for a video that can be downloaded.  It should be stored as a file named like 00244=27045=27045=27045.avi or 00244=33860=33259=27045.avi for the two examples above.

= File Names =

The files names have 4 components, each a 5 digit number.  The first is the generation containing the sheep.  The 2nd is the ID of that sheep.  the 3rd and 4th are the keyframes at the beginning and end (first and last) of the sheep.  The keyframes are IDs of other sheep.

A sheep that is a loop has the same number in all 3 places.

A sheep that is an edge two different numbers for its first and last fields.  Sheep will play seamlessly if the keyframes match.  So if the last field of one sheep is the same as the first field of the next, then they will fit together.  For example, the following files make a continuous sequence:
{{{
00244=01423=01324=01251.avi
00244=01368=01251=01260.avi
00244=01260=01260=01260.avi
00244=01314=01260=01229.avi
}}}